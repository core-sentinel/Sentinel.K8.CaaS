@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components
@using System.Net.Http
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@using static Microsoft.AspNetCore.Components.Web.RenderMode
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using Microsoft.JSInterop

@using MediatR
@using Sentinel.ConnectionChecks;


<hr class="my-4">
<h4 class="mb-3">Cosmos DB</h4>
<div class="row g-3">
    <div class="col-sm-12">
        <label for="lastName" class="form-label">Connection String</label>
        <input type="text" class="form-control" id="connectionstring_redis" placeholder="Connection String" @bind="RequestValue.ConnectionString">
    </div>

</div>

<div class="row g-3">

    <div class="col-sm-6">
        <label for="lastName" class="form-label">Database Name</label>
        <input type="text" class="form-control" id="connectionstring_redis" placeholder="Database Name" @bind="RequestValue.DatabaseName">
    </div>
    <div class="col-sm-6">
        <label for="lastName" class="form-label">Container Name</label>
        <input type="text" class="form-control" id="connectionstring_redis" placeholder="Container Name" @bind="RequestValue.ContainerName">
    </div>

</div>


@code {
    [Parameter]
    public string URL { get; set; }

    [Parameter]
    public CosmosDBConnectionCheckRequest RequestValue { get; set; }


    [Parameter]
    public EventCallback<CosmosDBConnectionCheckRequest> RequestValueChanged { get; set; }

    private async Task UrlChanged(ChangeEventArgs e)
    {
        
        RequestValue.Url = e.Value.ToString();
        await RequestValueChanged.InvokeAsync(RequestValue);
        this.StateHasChanged();
    }
}