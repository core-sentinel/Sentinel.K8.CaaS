@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components
@using System.Net.Http
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@using static Microsoft.AspNetCore.Components.Web.RenderMode
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using Microsoft.JSInterop

@using MediatR
@using Sentinel.ConnectionChecks;


<div>
    <hr class="my-4">
    <h4 class="mb-3">HTTP</h4>
    <p> @(RequestValue.Url)  @(RequestValue.HttpMethod)</p>
    <div class="row g-3">
        <div class="col-sm-6">
            <label for="url" class="form-label">URL</label>
          @*   <input type="text" class="form-control" id="url" placeholder="URL" @bind-value="RequestValue.Url">  *@

           <input type="text" class="form-control" id="url" placeholder="URL" value="@RequestValue.Url" @onchange=UrlChanged> 
        </div>

         <div class="col-md-6">
            <label for="state" class="form-label">Http Method</label>
            <select class="form-select" id="authselect" @bind="RequestValue.HttpMethod">
                <option value="Get">Get</option>
                <option value="Post">Post</option>
                <option value="Put">Put</option>
                <option value="Delete">Delete</option>
                <option value="Head">Head</option>
            </select>
        </div>

    </div>
</div>

@code {
    [Parameter]
    public string URL { get; set; }

    [Parameter]
    public HttpConnectionCheckRequest RequestValue { get; set; }


    [Parameter]
    public EventCallback<HttpConnectionCheckRequest> RequestValueChanged { get; set; }

    private async Task UrlChanged(ChangeEventArgs e)
    {
        
        RequestValue.Url = e.Value.ToString();
        await RequestValueChanged.InvokeAsync(RequestValue);
        this.StateHasChanged();
    }
}